###########################################################################
## global variables
##
##

variables:
  __GIT_SUBMODULE__: _____________________________________________________
  GIT_SUBMODULE_STRATEGY: recursive
  GIT_SUBMODULE_FORCE_HTTPS: "true"

  __DOCKER_________: _____________________________________________________
  GET_DOCKER_URL: $CI_CD_GLOBAL_GET_DOCKER_URL

  __IMAGE_TAGS_____: _____________________________________________________
  DEBIAN_IMAGE_TAG: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/$CI_CD_GLOBAL_DOCKER_IMAGE_TAG_DEBIAN
  DOCKER_IMAGE_TAG: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/$CI_CD_GLOBAL_DOCKER_IMAGE_TAG_DOCKER
  GRADLE_IMAGE_TAG: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/$CI_CD_GLOBAL_DOCKER_IMAGE_TAG_GRADLE
  NODE_IMAGE_TAG: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/$CI_CD_GLOBAL_DOCKER_IMAGE_TAG_NODE

###########################################################################
## tasks
##
##

##############################
## tasks:docker
##

.docker-install-apk:
  script:
    - apk -U add --no-cache docker

.docker-install-apt:
  script:
    - apt-get update
    - apt-get install -y curl

.docker-config:
  script:
    - if [ "$GET_DOCKER_URL" = "" ]; then GET_DOCKER_URL=https://get.docker.com; fi
    - curl -sL $GET_DOCKER_URL | /bin/sh

.docker-system-prune:
  script:
    - docker system prune --all --force

.docker-container-prune:
  script:
    - docker container prune --force

.docker-volume-prune:
  script:
    - docker volume prune --force

.docker-image-prune:
  script:
    - docker image prune --all --force

.docker-network-prune:
  script:
    - docker network prune --force

.docker-clean:
  script:
    - docker system prune --all --force
    - docker container prune --force
    - docker volume prune --force
    - docker image prune --all --force
    - docker network prune --force

##############################
## tasks:git
##

.git-install-apk:
  script:
    - apk -U add --no-cache git

.git-install-apt:
  script:
    - apt-get update
    - apt-get install -y git

.git-config:
  script:
    - git config --global user.name  "$GITLAB_USER_NAME"
    - git config --global user.email "$GITLAB_USER_EMAIL"
    - git remote set-url origin "https://oauth2:${GITLAB_ACCESS_TOKEN}@${CI_SERVER_HOST}/${CI_PROJECT_PATH}.git"

.git-tag:
  script:
    - git tag -a "${projectVersion}" -m "'${projectVersion}' $(date +%Y-%m-%dT%H:%M:%S)"
    - git push origin $projectVersion

.git-merge:
  script:
    - if [ "$GIT_TARGET_BRANCH" = "" ]; then GIT_TARGET_BRANCH=develop; fi
    - gitSourceBranchName=$CI_COMMIT_REF_NAME
    - gitTargetBranchName=$GIT_TARGET_BRANCH
    - if [ "$gitTargetBranchName" = "" ]; then gitTargetBranchName=develop; fi
    - gitMergeBranch=$gitSourceBranchName-$CI_COMMIT_SHORT_SHA
    - git checkout -b $gitMergeBranch
    - git push -o merge_request.create -o merge_request.title="Merge 'v${projectVersion}' into '${gitTargetBranchName}'" -o merge_request.description="Automatic MR to merge '${gitSourceBranchName}' into '${gitTargetBranchName}' @ $(date +%Y-%m-%dT%H:%M:%S)" -o merge_request.target=$gitTargetBranchName -o merge_request.merge_when_pipeline_succeeds -o merge_request.remove_source_branch origin $gitMergeBranch

##############################
## tasks:gradle
##

.gradle-config:
  script:
    - projectVersion=$(gradle -q printProjectVersion)

.gradle-check:
  script:
    - gradle check -x test -x build --refresh-dependencies --warning-mode all --info

.gradle-sonar:
  script:
    - gradle sonar --refresh-dependencies --warning-mode all --info

.gradle-build:
  script:
    - gradle build -x check -x test --refresh-dependencies --warning-mode all --info

.gradle-test:
  script:
    - gradle test -x check -x build --refresh-dependencies --warning-mode all --info

.gradle-javadoc:
  script:
    - gradle javadoc -x check -x test -x build --refresh-dependencies --warning-mode all --info

.gradle-changelog:
  script:
    - gradle changelog --refresh-dependencies --warning-mode all --info

.gradle-cleanDist:
  script:
    - gradle cleanDist --refresh-dependencies --warning-mode all --info

.gradle-makeDist:
  script:
    - gradle makeDist --refresh-dependencies --warning-mode all --info

##############################
## tasks:make
##

.make-install-apk:
  script:
    - apk -U add --no-cache make

.make-install-apt:
  script:
    - apt-get update
    - apt-get install make

.make-config:
  script:
    - projectVersion=$(cat VERSION)

.make-lint:
  script:
    - make lint

.make-sonar:
  script:
    - make sonar

.make-build:
  script:
    - make build

.make-test:
  script:
    - make test

.make-docs:
  script:
    - make docs

.make-changelog:
  script:
    - make changelog

.make-cleanDist:
  script:
    - make cleanDist

.make-makeDist:
  script:
    - make makeDist

##############################
## tasks:npm
##

.npm-config:
  script:
    - projectVersion=$(node -p -e "require('./package.json').version")

.npm-lint:
  script:
    - npm install
    - npm run lint

.npm-sonar:
  script:
    - npm install
    - npm run sonar

.npm-build:
  script:
    - npm install
    - npm run build

.npm-test:
  script:
    - npm install
    - npm run test

.npm-tsdoc:
  script:
    - npm install
    - npm run tsdoc

.npm-changelog:
  script:
    - npm install
    - npm run changelog

.npm-cleanDist:
  script:
    - npm install
    - npm run dist:clean

.npm-makeDist:
  script:
    - npm install
    - npm run dist:make

###########################################################################
## templates
##
##

##############################
## templates:debian
##

.run_always_with_debian:
  image: $DEBIAN_IMAGE_TAG
  only:
    - merge_requests
    - develop
    - stage
    - master

.run_always_with_debian_and_generate_dist:
  image: $DEBIAN_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - merge_requests
    - develop
    - stage
    - master

.run_on_mr_with_debian:
  image: $DEBIAN_IMAGE_TAG
  only:
    - merge_requests

.run_on_mr_with_debian_and_generate_dist:
  image: $DEBIAN_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - merge_requests

.run_on_branches_with_debian:
  image: $DEBIAN_IMAGE_TAG
  only:
    - develop
    - stage
    - master

.run_on_branches_with_debian_and_generate_dist:
  image: $DEBIAN_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - develop
    - stage
    - master

.run_on_develop_with_debian:
  image: $DEBIAN_IMAGE_TAG
  only:
    - develop

.run_on_develop_with_debian_and_generate_dist:
  image: $DEBIAN_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - develop

.run_on_stage_with_debian:
  image: $DEBIAN_IMAGE_TAG
  only:
    - stage

.run_on_stage_with_debian_and_generate_dist:
  image: $DEBIAN_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - stage

.run_on_master_with_debian:
  image: $DEBIAN_IMAGE_TAG
  only:
    - master

.run_on_master_with_debian_and_generate_dist:
  image: $DEBIAN_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - master

##############################
## templates:docker
##

.run_always_with_docker:
  image: $DOCKER_IMAGE_TAG
  only:
    - merge_requests
    - develop
    - stage
    - master

.run_always_with_docker_and_generate_dist:
  image: $DOCKER_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - merge_requests
    - develop
    - stage
    - master

.run_on_mr_with_docker:
  image: $DOCKER_IMAGE_TAG
  only:
    - merge_requests

.run_on_mr_with_docker_and_generate_dist:
  image: $DOCKER_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - merge_requests

.run_on_branches_with_docker:
  image: $DOCKER_IMAGE_TAG
  only:
    - develop
    - stage
    - master

.run_on_branches_with_docker_and_generate_dist:
  image: $DOCKER_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - develop
    - stage
    - master

.run_on_develop_with_docker:
  image: $DOCKER_IMAGE_TAG
  only:
    - develop

.run_on_develop_with_docker_and_generate_dist:
  image: $DOCKER_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - develop

.run_on_stage_with_docker:
  image: $DOCKER_IMAGE_TAG
  only:
    - stage

.run_on_stage_with_docker_and_generate_dist:
  image: $DOCKER_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - stage

.run_on_master_with_docker:
  image: $DOCKER_IMAGE_TAG
  only:
    - master

.run_on_master_with_docker_and_generate_dist:
  image: $DOCKER_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - master

##############################
## templates:gradle
##

.run_always_with_gradle:
  image: $GRADLE_IMAGE_TAG
  only:
    - merge_requests
    - develop
    - stage
    - master

.run_always_with_gradle_and_generate_dist:
  image: $GRADLE_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - merge_requests
    - develop
    - stage
    - master

.run_on_mr_with_gradle:
  image: $GRADLE_IMAGE_TAG
  only:
    - merge_requests

.run_on_branches_with_gradle:
  image: $GRADLE_IMAGE_TAG
  only:
    - develop
    - stage
    - master

.run_on_develop_with_gradle:
  image: $GRADLE_IMAGE_TAG
  only:
    - develop

.run_on_stage_with_gradle:
  image: $GRADLE_IMAGE_TAG
  only:
    - stage

.run_on_master_with_gradle:
  image: $GRADLE_IMAGE_TAG
  only:
    - master

##############################
## templates:node
##

.run_always_with_node:
  image: $NODE_IMAGE_TAG
  only:
    - merge_requests
    - develop
    - stage
    - master

.run_always_with_node_and_generate_dist:
  image: $NODE_IMAGE_TAG
  artifacts:
    name: dist
    paths:
      - dist/
  cache:
    key: $CI_COMMIT_REF_NAME-$CI_COMMIT_SHORT_SHA
    paths:
      - dist/
  only:
    - merge_requests
    - develop
    - stage
    - master

.run_on_mr_with_node:
  image: $NODE_IMAGE_TAG
  only:
    - merge_requests

.run_on_branches_with_node:
  image: $NODE_IMAGE_TAG
  only:
    - develop
    - stage
    - master

.run_on_develop_with_node:
  image: $NODE_IMAGE_TAG
  only:
    - develop

.run_on_stage_with_node:
  image: $NODE_IMAGE_TAG
  only:
    - stage

.run_on_master_with_node:
  image: $NODE_IMAGE_TAG
  only:
    - master
